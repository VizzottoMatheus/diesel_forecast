ggAcf(diesel_train_diff, lag.max = 48)
diesel_diff_seas <- diff(diesel_train_diff, 12) # diferença sazonal
ggAcf(diesel_diff_seas, lag.max = 48)
ggPacf(diesel_diff_seas, lag.max = 48)
arima3 <- Arima(diesel_train, order = c(5, 1, 1), seasonal = list(order = c(1, 1, 1)), method = "ML")
arima3$aic
arima3$bic
checkresiduals(arima3)
arima3_fc <- forecast(arima3, h = 12)
accuracy(arima3_fc, diesel_test)
plot_forecast(arima3_fc)
test_forecast(actual = diesel_ts,
forecast.obj = arima3_fc,
test = diesel_test)
diesel_log_train
diesel_log_train_diff <- diff(diesel_log_train)
ggAcf(diesel_log_train)
ggPacf(diesel_log_train)
ggAcf(diesel_log_train_diff, lag.max = 48)
ggPacf(diesel_log_train_diff, lag.max = 48)
ggAcf(diff(diesel_log_train_diff,12), lag.max = 48)
ggPacf(diff(diesel_log_train_diff,12), lag.max = 48)
arima4 <- Arima(diesel_log_train, order = c(5, 1, 2), seasonal = list(order = c(1, 1, 1)), method = "ML")
arima4$aic
arima4$bic
checkresiduals(arima4)
arima4_fc <- forecast(arima4, h = 12)
accuracy(arima4_fc, diesel_log_test)
accuracy(exp(arima4_fc$mean), diesel_test) # valores transformados
plot_forecast(arima4_fc)
test_forecast(actual = diesel_ts_log,
forecast.obj = arima4_fc,
test = diesel_log_test
) %>%
layout(title = "Vendas de óleo diesel - Observado vs Estimado e Projetado",
yaxis = list(title = "log de m³"))
# 7 - HOLT WINTERS
shallow_grid <- ts_grid(diesel_ts,
model = "HoltWinters",
periods = 6,
window_space = 6,
window_test = 12,
hyper_params = list(alpha = seq(0,1,0.1),
beta = seq(0,1,0.1),
gamma = seq(0,1,0.1)),
parallel = TRUE,
n.cores = 8)
plot_grid(shallow_grid) # alfa: entre 0,1 e 0,5; beta: entre 0 e 0,1; gama: entre 0,1 e 0,3
plot_grid(shallow_grid, type = "3D", top = 250)
deep_grid <- ts_grid(diesel_ts,
model = "HoltWinters",
periods = 6,
window_space = 6,
window_test = 12,
hyper_params = list(alpha = seq(0.1,0.5,0.01),
beta = seq(0,0.1,0.01),
gamma = seq(0.1,0.3,0.01)),
)
plot_grid(deep_grid)
plot_grid(deep_grid, type = "3D", top = 250)
md_hw_grid <- HoltWinters(diesel_ts,
alpha = deep_grid$alpha,
beta = deep_grid$beta,
gamma = deep_grid$gamma)
deep_grid$alpha
deep_grid$beta
deep_grid$gamma
accuracy(md_hw_grid$fitted, diesel_ts)
plot(diesel_ts)
lines(md_hw_grid$fitted[,1], col = "red")
plot(md_hw_grid$fitted[,2]) # nível
plot(md_hw_grid$fitted[,3]) # tendência
plot(md_hw_grid$fitted[,4]) # sazonalidade
accuracy(md_hw_grid$fitted, diesel_ts)
accuracy(exp(arima4_fc$mean), diesel_test) # valores transformados
accuracy(arima3_fc, diesel_test)
accuracy(arima4_fc, diesel_log_test)
accuracy(exp(arima4_fc$mean), diesel_test) # com transormação logaritmica é melhor
accuracy(md_hw_grid$fitted, diesel_ts)
source("get_data.R")
df_rs <- oil_data_state()
source("get_data.R")
df_rs <- oil_data_state()
library(lubridate)
library(TSstudio)
library(ggplot2)
df_rs <- oil_data_state()
head(df_rs)
tail(df_rs)
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
date_min_y <- year(min(df_rs$ANO_MES))
date_min_m <- month(min(df_rs$ANO_MES))
date_min <- c(date_min_y, date_min_m)
date_max_y <- year(max(df_rs$ANO_MES))
date_max_m <- month(max(df_rs$ANO_MES))
date_max <- c(date_max_y, date_max_m)
diesel_ts <- ts(df_rs$VENDAS, start = date_min, end = date_max, frequency = 12)
diesel_ts_log <- ts(log(df_rs$VENDAS), start = date_min, end = date_max, frequency = 12)
ts_info(diesel_ts)
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(diesel_ts),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- rollapply(diesel_ts, width = 12, FUN = mean)
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(df),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
dec <- decompose(diesel_ts)
plot(dec)
ggseasonplot(diesel_ts, continuous = TRUE) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL")
ggsubseriesplot(diesel_ts) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL")
diesel_ts_diff <- diff(diesel_ts) # cria série diferenciada
ggseasonplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
ggsubseriesplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
reg_seas <- tslm(diesel_ts_log ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas)
ggsubseriesplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
ggseasonplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
ts_seasonal(diesel_ts, type = "box")
ts_seasonal(diesel_ts_diff, type = "box")
reg_seas <- tslm(diesel_ts_log ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas)
season
?tslm
ts_seasonal(diesel_ts_log, type = "box")
reg_seas <- tslm(diesel_ts_diff ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas)
reg_seas <- tslm(diesel_ts_diff ~ season) # MESES SÃO SIGNIFICATIVOS?
ts_seasonal(diesel_ts, type = "box")
ts_seasonal(diesel_ts_diff, type = "box")
reg_seas <- tslm(diesel_ts_diff ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas)
ts_seasonal(diesel_ts, type = "box")
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas)
ts_seasonal(diesel_ts_diff, type = "box")
reg_seas <- tslm(diesel_ts_diff ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas)
######### QUEBRA ESTRUTURAL
model1 <- Fstats(df_rs$VENDAS~1, from = 0.01)
sctest(model1)
quebras <- breakpoints(df_rs$VENDAS~1)
#quebras
# DATAS COM POSSÍVEL QUEBRA ESTRUTURAL
quebras <- quebras$breakpoints
dates <- as.Date(df_rs[quebras,1])
values <- df_rs[quebras,2]
df_bp <- as.data.frame(cbind(dates, values))
df_bp$dates <- as.Date(df_bp$dates)
ggplot(df_rs, aes(x = ANO_MES, y = VENDAS)) +
geom_line() +
geom_point(data = df_bp, aes(x = dates, y = values), col = "red", size = 2)
df_rs
year(df_rs$ANO_MES)
df_rs$ANO <- year(df_rs$ANO_MES)
df_rs
library(dplyr)
group_by(df_rs, ANO, "sum")
group_by(df_rs, ANO)
group_by(df_rs, ANO) %>% summarise(
vendas = sum("VENDAS")
)
by_year <- group_by(df_rs, ANO)
library(tidyverse)
by_year %>%
summarise(
vendas = sum("VENDAS")
)
by_year <- group_by(df_rs, ANO) %>% summarise(
vendas = sum(VENDAS)
)
df_rs_anual <- group_by(df_rs, ANO) %>% summarise(
vendas = sum(VENDAS)
)
df_rs_anual
plot(df_rs_anual)
df_rs_anual <- group_by(df_rs, ANO) %>% summarise(
vendas = sum(VENDAS)
)
date_min_y <- year(min(df_rs$ANO_MES))
date_min_m <- month(min(df_rs$ANO_MES))
date_min <- c(date_min_y, date_min_m)
date_max_y <- year(max(df_rs$ANO_MES))
date_max_m <- month(max(df_rs$ANO_MES))
date_max <- c(date_max_y, date_max_m)
diesel_ts <- ts(df_rs$VENDAS, start = date_min, end = date_max, frequency = 12)
diesel_ts_year <- ts(df_rs_anual$vendas, start = date_min_y, end = date_min_x, frequency = 1)
diesel_ts_year <- ts(df_rs_anual$vendas, start = date_min_y, end = date_max_y, frequency = 1)
plot(diesel_ts_year)
diesel_ts_year
diesel_ts_year <- ts(df_rs_anual$vendas, start = date_min_y, end = date_max_y -1, frequency = 1)
plot(diesel_ts_year)
# VISUALIZAÇÃO
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(diesel_ts),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- rollapply(diesel_ts, width = 12, FUN = mean)
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(diesel_ts),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- rollapply(diesel_ts, width = 12, FUN = mean)
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(df),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
dec <- decompose(diesel_ts)
plot(dec)
ts_plot(diesel_ts, line.mode = 'dot')
?ts_plot
ts_plot(diesel_ts, line.mode = 'markers')
# VISUALIZAÇÃO
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(diesel_ts),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- rollapply(diesel_ts, width = 12, FUN = mean)
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(df),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
dec <- decompose(diesel_ts)
plot(dec)
ts_plot(dec$seasonal)
ts_plot(dec$trend)
ts_plot(log(df),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
plot(dec)
ts_plot(dec$trend)
plot(diesel_ts_year)
plot(diesel_ts_year)
ts_plot(diesel_ts_year)
diesel_ts_log <- ts(log(df_rs$VENDAS), start = date_min, end = date_max, frequency = 12)
ts_info(diesel_ts)
ts_plot(diesel_ts_year, ylim = [0, 4000000])
ts_plot(diesel_ts_year, ylim = (0, 4000000)
ts_plot(diesel_ts_year, ylim = (0, 4000000))
ts_plot(diesel_ts_year, ylim = c(0, 4000000))
ts_plot(diesel_ts_year, ylim = [0, 4000000])
ts_plot(diesel_ts_year, ylim = c(0, 4000000))
plot(diesel_ts_year, ylim = c(0, 4000000))
df_rs_anual <- group_by(df_rs, ANO) %>% summarise(
vendas = sum(VENDAS)
)
plot(diesel_ts_year, ylim = c(0, 4000000))
diesel_ts <- ts(df_rs$VENDAS, start = date_min, end = date_max, frequency = 12)
# VISUALIZAÇÃO
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(diesel_ts_year)
# VISUALIZAÇÃO
ts_plot(diesel_ts_year,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
# VISUALIZAÇÃO
ts_plot(diesel_ts_year,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS ANUAIS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS MENSAIS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(diesel_ts),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- rollapply(diesel_ts, width = 12, FUN = mean)
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS MENSAIS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- rollapply(diesel_ts, width = 12, FUN = mean)
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
# VISUALIZAÇÃO
ts_plot(diesel_ts_year,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS ANUAIS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- rollapply(diesel_ts, width = 12, FUN = mean)
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(df),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
dec <- decompose(diesel_ts)
plot(dec)
ts_plot(dec$trend)
colnames(df) <- c("VENDAS MENSAIS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
df <- cbind(diesel_ts, trend, dec$trend)
colnames(df) <- c("VENDAS MENSAIS", "MÉDIA MÓVEL 12 MESES")
colnames(df) <- c("VENDAS MENSAIS", "MÉDIA MÓVEL 12 MESES", "TREND")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- decompose(diesel_ts)$trend # OPÇÃO 2
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS MENSAIS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- rollapply(diesel_ts, width = 12, FUN = mean) #OPÇÃO 1
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS MENSAIS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(df),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
dec <- decompose(diesel_ts)
df <- cbind(diesel_ts, trend)
# VISUALIZAÇÃO
ts_plot(diesel_ts_year,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS ANUAIS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
# SÉRIE MENSAL COM RENDÊNCIA
trend <- rollapply(diesel_ts, width = 12, FUN = mean) #OPÇÃO 1
#trend <- decompose(diesel_ts)$trend # OPÇÃO 2
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS MENSAIS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
# SÉRIE EM LOGARITMO
ts_plot(log(df),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ggseasonplot(diesel_ts, continuous = TRUE) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL")
ggsubseriesplot(diesel_ts) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL")
diesel_ts_diff <- diff(diesel_ts) # cria série diferenciada
ggseasonplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
# SÉRIE DIFERENCIADA
diesel_ts_diff <- diff(diesel_ts) # cria série diferenciada
ggseasonplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
ggseasonplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
ggsubseriesplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
ggsubseriesplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
ts_seasonal(diesel_ts, type = "box")
# SIGNIFICÂNCIA DA SAZONALIDADE MENSAL
ts_seasonal(diesel_ts, type = "box")
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas)
ts_seasonal(diesel_ts_diff, type = "box")
reg_seas <- tslm(diesel_ts_diff ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas)
ts_seasonal(diesel_ts_log, type = "box")
reg_seas <- tslm(diesel_ts_log ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas)
ts_seasonal(diesel_ts_log, type = "box")
reg_seas <- tslm(diesel_ts_log ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas)
############## EXTRAÇÃO DOS DADOS
source("get_data.R")
############## PREPARAÇÃO DOS DADOS
df_rs$ANO <- year(df_rs$ANO_MES)
ts_info(diesel_ts)
ts_info(diesel_ts)
ts_info(diesel_ts_year)
ts_info(diesel_ts_log)
