ggplot(df_rs, aes(x = ANO_MES, y = VENDAS)) +
geom_line() +
geom_point(data = df_bp, aes(x = dates, y = values))
breakpoints(df_rs$VENDAS~1)
breakpoints(df_rs$VENDAS~1)
quebras <- breakpoints(df_rs$VENDAS~1)
quebras <- quebras$breakpoints
quebras
quebras <- breakpoints(df_rs$VENDAS~1)
quebras
# DATAS COM POSSÍVEL QUEBRA ESTRUTURAL
quebras <- quebras$breakpoints
dates <- as.Date(df_rs[quebras,1])
values <- df_rs[quebras,2]
df_bp <- as.data.frame(cbind(dates, values))
df_bp$dates <- as.Date(df_bp$dates)
df_bp
ggplot(df_rs, aes(x = ANO_MES, y = VENDAS)) +
geom_line() +
geom_point(data = df_bp, aes(x = dates, y = values))
ggplot(df_rs, aes(x = ANO_MES, y = VENDAS)) +
geom_line() +
geom_point(data = df_bp, aes(x = dates, y = values), col = "red", size = 2)
url_cste <- "http://api.sidra.ibge.gov.br/values/"
soja<- "t/5457/p/all/v/8331, 216, 214, 215/ c782/40124/n3/43"
milho<- "t/5457/p/all/v/8331, 216, 214, 215/ c782/40122/n3/43"
trigo<- "t/5457/p/all/v/8331, 216, 214, 215/ c782/40127/n3/43"
paste0(url_cste, soja)
read.csv(paste0(url_cste, soja))
read.csv(paste0(url_cste, soja), sep = ";")
read.csv(paste0(url_cste, soja), sep = ";", encoding = "UTF-8")
install.packages("rjson")
library(rjson)
fromJSON(paste0(url_cste, soja))
soja1 <- paste0(url_cste, soja)
soja1
soja<- "t/5457/p/all/v/8331,216,214,215/c782/40124/n3/43"
milho<- "t/5457/p/all/v/8331,216,214,215/c782/40122/n3/43"
trigo<- "t/5457/p/all/v/8331,216,214,215/c782/40127/n3/43"
soja1 <- paste0(url_cste, soja)
soja1
read.csv(paste0(url_cste, soja), encoding = "UTF-8")
fromJSON(soja1)
soja1
fromJSON(soja1, collapse = "")
soja1 <- paste0(url_cste, soja)
soja1
url_cste <- "https://api.sidra.ibge.gov.br/values/"
soja<- "t/5457/p/all/v/8331,216,214,215/c782/40124/n3/43"
milho<- "t/5457/p/all/v/8331,216,214,215/c782/40122/n3/43"
trigo<- "t/5457/p/all/v/8331,216,214,215/c782/40127/n3/43"
soja1 <- paste0(url_cste, soja)
soja1
fromJSON(soja1, collapse = "")
fromJSON(soja1, collapse() = "")
fromJSON(paste(readLines(soja1), collapse=""), collapse() = "")
fromJSON(paste(readLines(soja1), collapse=""))
readLines(soja1
readLines(soja1)
readLines(soja1)
soja1
url_cste <- "http://api.sidra.ibge.gov.br/values/"
soja<- "t/5457/p/all/v/8331,216,214,215/c782/40124/n3/43"
milho<- "t/5457/p/all/v/8331,216,214,215/c782/40122/n3/43"
trigo<- "t/5457/p/all/v/8331,216,214,215/c782/40127/n3/43"
soja1 <- paste0(url_cste, soja)
soja1
readLines(soja1)
fromJSON(paste(readLines(soja1), collapse=""))
fromJSON(soja1)
fromJSON(soja1, flatten = TRUE)
install.packages("jsonlite")
install.packages("jsonlite")
library(jsonlite)
soja1 <- paste0(url_cste, soja)
fromJSON(soja1)
soja<- paste0(url_cste, "t/5457/p/all/v/8331,216,214,215/c782/40124/n3/43")
milho<- paste0(url_cste, "t/5457/p/all/v/8331,216,214,215/c782/40122/n3/43")
trigo<- paste0(url_cste, "t/5457/p/all/v/8331,216,214,215/c782/40127/n3/43")
url_cste <- "http://api.sidra.ibge.gov.br/values/"
soja<- paste0(url_cste, "t/5457/p/all/v/8331,216,214,215/c782/40124/n3/43")
milho<- paste0(url_cste, "t/5457/p/all/v/8331,216,214,215/c782/40122/n3/43")
trigo<- paste0(url_cste, "t/5457/p/all/v/8331,216,214,215/c782/40127/n3/43")
soja_df <- fromJSON(soja)
milho_df <- fromJSON(soja)
trigo_df <- fromJSON(soja)
source("get_data.R")
source("get_data.R")
library(forecast)
library(lubridate)
library(TSstudio)
library(ggplot2)
library(scales)
library(zoo)
library(strucchange)
df_cidades <- oil_data_cities()
df_rs <- oil_data_state()
head(df_rs)
tail(df_rs)
date_min_y <- year(min(df_rs$ANO_MES))
date_min_m <- month(min(df_rs$ANO_MES))
date_min <- c(date_min_y, date_min_m)
date_max_y <- year(max(df_rs$ANO_MES))
date_max_m <- month(max(df_rs$ANO_MES))
date_max <- c(date_max_y, date_max_m)
diesel_ts <- ts(df_rs$VENDAS, start = date_min, end = date_max, frequency = 12)
ts_info(diesel_ts)
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas) # JAN, MAR, ABRI, MAI, AGO, SET, OUT, NOV
source("get_data.R")
library(forecast)
library(lubridate)
library(TSstudio)
library(ggplot2)
library(scales)
library(zoo)
library(strucchange)
df_cidades <- oil_data_cities()
df_rs <- oil_data_state()
head(df_rs)
tail(df_rs)
date_min_y <- year(min(df_rs$ANO_MES))
date_min_m <- month(min(df_rs$ANO_MES))
date_min <- c(date_min_y, date_min_m)
date_max_y <- year(max(df_rs$ANO_MES))
date_max_m <- month(max(df_rs$ANO_MES))
date_max <- c(date_max_y, date_max_m)
diesel_ts <- ts(df_rs$VENDAS, start = date_min, end = date_max, frequency = 12)
ts_info(diesel_ts)
# SÉRIE EM NÍVEL
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
# LOGARITMO DA SÉRIE EM NÍVEL (CORRIGE TENDÊNCIA NÃO-LINEAR)
ts_plot(log(diesel_ts),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- rollapply(diesel_ts, width = 12, FUN = mean)
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
dec <- decompose(diesel_ts)
plot(dec)
ggseasonplot(diesel_ts, continuous = TRUE) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL")
ggsubseriesplot(diesel_ts) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL")
diesel_ts_diff <- diff(diesel_ts) # cria série diferenciada
ggseasonplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
ggsubseriesplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas) # JAN, MAR, ABRI, MAI, AGO, SET, OUT, NOV
accuracy(reg_seas$fitted.values, df_rs)
accuracy(fitted(red_seas), df_rs)
accuracy(reg_seas, df_rs)
accuracy(reg_seas$fitted.values, df_rs)
reg_seas$fitted.values
accuracy(reg_seas$fitted.values, df_rs$VENDAS)
# 2
reg_seas_tren <- tslm(diesel_ts ~ season + trend) # MESES SÃO SIGNIFICATIVOS?
# 1
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas$fitted.values, df_rs$VENDAS)
# 2
reg_seas_tren <- tslm(diesel_ts ~ season + trend) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas_tren$fitted.values, df_rs$VENDAS)
source("get_data.R")
library(forecast)
library(lubridate)
library(TSstudio)
library(ggplot2)
library(scales)
library(zoo)
library(strucchange)
df_cidades <- oil_data_cities()
df_rs <- oil_data_state()
head(df_rs)
tail(df_rs)
date_min_y <- year(min(df_rs$ANO_MES))
date_min_m <- month(min(df_rs$ANO_MES))
date_min <- c(date_min_y, date_min_m)
date_max_y <- year(max(df_rs$ANO_MES))
date_max_m <- month(max(df_rs$ANO_MES))
date_max <- c(date_max_y, date_max_m)
diesel_ts <- ts(df_rs$VENDAS, start = date_min, end = date_max, frequency = 12)
ts_info(diesel_ts)
# SÉRIE EM NÍVEL
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
# LOGARITMO DA SÉRIE EM NÍVEL (CORRIGE TENDÊNCIA NÃO-LINEAR)
ts_plot(log(diesel_ts),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
trend <- rollapply(diesel_ts, width = 12, FUN = mean)
df <- cbind(diesel_ts, trend)
colnames(df) <- c("VENDAS", "MÉDIA MÓVEL 12 MESES")
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
dec <- decompose(diesel_ts)
plot(dec)
ggseasonplot(diesel_ts, continuous = TRUE) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL")
ggsubseriesplot(diesel_ts) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL")
diesel_ts_diff <- diff(diesel_ts) # cria série diferenciada
ggseasonplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
ggsubseriesplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas) # JAN, MAR, ABRI, MAI, AGO, SET, OUT, NOV
quebras <- breakpoints(df_rs$VENDAS~1)
quebras
# DATAS COM POSSÍVEL QUEBRA ESTRUTURAL
quebras <- quebras$breakpoints
dates <- as.Date(df_rs[quebras,1])
values <- df_rs[quebras,2]
df_bp <- as.data.frame(cbind(dates, values))
df_bp$dates <- as.Date(df_bp$dates)
ggplot(df_rs, aes(x = ANO_MES, y = VENDAS)) +
geom_line() +
geom_point(data = df_bp, aes(x = dates, y = values), col = "red", size = 2)
# 1
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas$fitted.values, df_rs$VENDAS)
# 2
reg_seas_tren <- tslm(diesel_ts ~ season + trend) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas_tren$fitted.values, df_rs$VENDAS)
plot(df_rs$VENDAS)
plot(df_rs$VENDAS, type = "l")
lines(reg_seas_tren$fitted.values, col = "red")
reg_seas_tren$fitted.values
plot(df_rs$VENDAS, type = "l")
lines(reg_seas_tren$fitted.values, col = "red")
mean(reg_seas_tren$fitted.values)
mean(df_rs$VENDAS)
reg_seas_tren$fitted.values
df_rs$VENDAS
boxplot(df_rs$VENDAS)
boxplot(reg_seas_tren$fitted.values)
plot(reg_seas_tren$fitted.values)
lines(df_rs$VENDAS)
ggseasonplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
ggsubseriesplot(diesel_ts_diff) +
theme_bw() +
scale_y_continuous(labels = scales::number) +
labs(title = "SAZONALIDADE DAS VENDAS DE ÓLEO DIESEL (SÉRIE DIFERENCIADA")
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas) # JAN, MAR, ABRI, MAI, AGO, SET, OUT, NOV
# SÉRIE EM NÍVEL
ts_plot(diesel_ts,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
# LOGARITMO DA SÉRIE EM NÍVEL (CORRIGE TENDÊNCIA NÃO-LINEAR)
ts_plot(log(diesel_ts),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
# 1
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas$fitted.values, df_rs$VENDAS)
# 2
reg_seas_tren <- tslm(diesel_ts ~ season + trend) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas_tren$fitted.values, df_rs$VENDAS)
plot(df_rs$VENDAS)
plot(df_rs$VENDAS, type = "l")
lines(df_rs$VENDAS - 5000, col = "red")
lines(reg_seas_tren$fitted.values, col = "green")
# 2
reg_seas_tren <- tslm(diesel_ts ~ season + trend) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas_tren$fitted.values, df_rs$VENDAS)
ts_plot(df,
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
ts_plot(log(df),
color = "green",
Ygrid = TRUE,
Xgrid = TRUE,
title = "VENDAS DE ÓLEO DIESEL NO RIO GRANDE DO SUL (METROS CÚBICOS)")
# 1
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas$fitted.values, df_rs$VENDAS)
View(cbind(df_rs$VENDAS, reg_seas_tren$fitted.values))
plot(df_rs$VENDAS, type = "l", col = "red")
plot(df_rs$VENDAS, type = "l")
lines(reg_seas_tren$fitted.values, df_rs$ANO_MES, col = "red")
plot(df_rs$VENDAS, type = "l")
# 1
reg_seas <- tslm(diesel_ts ~ season) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas$fitted.values, df_rs$VENDAS)
# 2
reg_seas_tren <- tslm(diesel_ts ~ season + trend) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas_tren$fitted.values, df_rs$VENDAS)
plot(diesel_ts, type = "l")
lines(reg_seas_tren$fitted.values, col = "red")
# 1
reg_seas_tren <- tslm(diesel_ts ~ season + trend) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas_tren$fitted.values, df_rs$VENDAS)
diesel_ts_log <- ts(log(df_rs$VENDAS), start = date_min, end = date_max, frequency = 12)
reg_seas <- tslm(diesel_ts_log ~ season) # MESES SÃO SIGNIFICATIVOS?
summary(reg_seas) # JAN, MAR, ABRI, MAI, AGO, SET, OUT, NOV
# 1
reg_seas_tren <- tslm(diesel_ts_log ~ season + trend) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas_tren$fitted.values, df_rs$VENDAS)
plot(diesel_ts_log)
plot(diesel_ts_log, type = "l")
lines(reg_seas_tren$fitted.values, col = "red")
# 1
reg_seas_tren <- tslm(diesel_ts ~ season + trend) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas_tren$fitted.values, df_rs$VENDAS)
# 2
reg_seas_tren <- tslm(diesel_ts_log ~ season + trend) # MESES SÃO SIGNIFICATIVOS?
accuracy(reg_seas_tren$fitted.values, df_rs$VENDAS)
plot(diesel_ts_log, type = "l")
lines(reg_seas_tren$fitted.values, col = "red")
# 3 - ARIM
ggAcf(diesel_ts)
ggPacf(diesel_ts)
ggPacf(diesel_ts_diff)
library(tseries)
adf.test(ggAcf)
adf.test(diesel_ts)
ggAacf(diesel_ts_diff)
ggAcf(diesel_ts_diff)
ggPacf(diesel_ts_diff)
adf.test(diesel_ts_diff)
pp.test(diesel_ts)
pp.test(log(diesel_ts))
adf.test(diesel_ts)
ggAcf(diesel_ts_diff)
ggPacf(diesel_ts_diff)
adf.test(diesel_ts_diff)
pp.test(diesel_ts)
adf.test(diesel_ts) # presença de raiz unitária
ggAcf(diesel_ts_diff)
ggPacf(diesel_ts_diff)
adf.test(diesel_ts_diff) # ausência de raiz unitária
arima1 <- Arima(diesel_ts, order = c(6, 1, 3))
arima1 <- Arima(diesel_ts, order = c(6, 1, 3), method = "ML")
plot(diesel_ts)
lines(arima1$fitted, col = "red")
accuracy(arima1$fitted, diesel_ts)
accuracy(reg_seas_tren$fitted.values, df_rs$VENDAS)
ggAcf(diesel_ts_diff)
ggPacf(diesel_ts_diff)
checkresiduals(arima1)
accuracy(arima1$fitted, diesel_ts)
plot(diesel_ts)
lines(arima1$fitted, col = "red")
# 4 - SARIMA
arima2 <- Arima(dieel_ts, order = c(6, 1, 3), seasonal = list(order = 0, 0, 1))
# 4 - SARIMA
arima2 <- Arima(diesel_ts, order = c(6, 1, 3), seasonal = list(order = 0, 0, 1))
# 4 - SARIMA
arima2 <- Arima(diesel_ts, order = c(6, 1, 3), seasonal = list(order = c(0, 0, 1)))
checkresiduals(arima2)
accuracy(arima1$fitted, diesel_ts)
# 4 - SARIMA (6, 1, 3) (0, 0, 3)
ggAcf(diesel_ts_diff, lag.max = 48)
# 4 - SARIMA (6, 1, 3) (0, 1, 0) SÉRIE APARENTA DECAIMENTO SAZONAL
diff(diesel_ts_diff, 12)
ggAcf(diesel_ts_diff, lag.max = 48)
ggAcf(diff(diesel_ts_diff, 12), lag.max = 48)
ggAcf(diesel_ts_diff_seas, lag.max = 48)
diesel_ts_diff_seas <- diff(diesel_ts_diff, 12)
ggAcf(diesel_ts_diff_seas, lag.max = 48)
ggPacf(diesel_ts_diff_seas, lag.max = 48)
arima2 <- Arima(diesel_ts, order = c(6, 1, 1), seasonal = list(order = c(1, 1, 1)))
arima3 <- Arima(diesel_ts, order = c(6, 1, 1), seasonal = list(order = c(1, 1, 1)), method = "ML")
arima3 <- Arima(diesel_ts, order = c(6, 1, 1), seasonal = list(order = c(1, 1, 1)))
checkresiduals(arim3)
checkresiduals(arimA3)
checkresiduals(arima3)
accuracy(arima1$fitted, diesel_ts)
arima1 <- Arima(diesel_ts, order = c(6, 1, 3), method = "ML")
checkresiduals(arima1)
accuracy(arima1$fitted, diesel_ts)
# 4 - SARIMA (6, 1, 3) (0, 0, 1)
arima2 <- Arima(diesel_ts, order = c(6, 1, 3), seasonal = list(order = c(0, 0, 1)))
accuracy(arima1$fitted, diesel_ts)
accuracy(arima2$fitted, diesel_ts)
arima3 <- Arima(diesel_ts, order = c(6, 1, 1), seasonal = list(order = c(1, 1, 1)))
accuracy(arima13fitted, diesel_ts)
accuracy(arima3$fitted, diesel_ts)
checkresiduals(arima3)
plot(diesel_ts)
lines(arima3$fitted, col = "red")
length(diesel_ts)
length(arima3$fitted)
# HOLT WINTERS
deep_grid <- ts_grid(diesel_ts,
model = "HoltWinters",
periods = 6,
window_space = 6,
window_test = 12,
hyper_params = list(alpha = seq(0.1,0.5,0.01),
beta = seq(0,0.1,0.01),
gamma = seq(0.2,0.4,0.01)),
parallel = TRUE,
n.cores = 8)
plot_grid(deep_grid)
plot_grid(deep_grid, type = "3D", top = 250)
# HOLT WINTERS
shallow_grid <- ts_grid(diesel_ts,
model = "HoltWinters",
periods = 6,
window_space = 6,
window_test = 12,
hyper_params = list(alpha = seq(0,1,0.1),
beta = seq(0,1,0.1),
gamma = seq(0,1,0.1)),
parallel = TRUE,
n.cores = 8)
plot_grid(deep_grid)
plot_grid(shallow_grid)
plot_grid(shallow_grid, type = "3D", top = 250)
plot_grid(shallow_grid)
deep_grid <- ts_grid(diesel_ts,
model = "HoltWinters",
periods = 6,
window_space = 6,
window_test = 12,
hyper_params = list(alpha = seq(0.1,0.5,0.01),
beta = seq(0,0.1,0.01),
gamma = seq(0.1,0.3,0.01)),
parallel = TRUE,
n.cores = 8)
plot_grid(deep_grid)
plot_grid(deep_grid, type = "3D", top = 250)
deep_grid$alpha
deep_grid$beta
deep_grid$gamma
md_hw_grid <- HoltWinters(diesel_ts,
alpha = deep_grid$alpha,
beta = deep_grid$beta,
gamma = deep_grid$gamma)
accuracy(md_hw_grid$fitted, diesel_ts)
plot(diesel_ts)
lines(md_hw_grid$fitted, col = "red")
length(md_hw_grid$fitted)
length(diesel_ts)
md_hw_grid$fitted
md_hw_grid$fitted$xhat
md_hw_grid$fitted[,1]
plot(diesel_ts)
lines(md_hw_grid$fitted[,1], col = "red")
plot(diesel_ts)
lines(md_hw_grid$fitted[,2], col = "red")
plot(diesel_ts)
lines(md_hw_grid$fitted[,3], col = "red")
md_hw_grid$fitted
plot(diesel_ts)
lines(md_hw_grid$fitted[,4], col = "red")
plot(md_hw_grid$fitted[4])
plot(md_hw_grid$fitted[,4])
plot(diesel_ts)
lines(md_hw_grid$fitted[,1], col = "red")
plot(md_hw_grid$fitted[,2] # nível
plot(md_hw_grid$fitted[,2]) # nível
plot(md_hw_grid$fitted[,2]) # nível
plot(md_hw_grid$fitted[,3]) # tendência
plot(md_hw_grid$fitted[,4]) # sazonalidade
plot(diesel_ts)
lines(md_hw_grid$fitted[,1], col = "red")
accuracy(md_hw_grid$fitted, diesel_ts)
plot(diesel_ts)
lines(md_hw_grid$fitted[,1], col = "red")
accuracy(arima3$fitted, diesel_ts)
plot(diesel_ts)
lines(arima3$fitted, col = "red")
